name: Users Workflow
on:
  push:
    branches:
      - users
jobs:
  setup:
    uses: ./.github/workflows/setup.yml
    with:
      working_dir: users-api
  build:
    needs: setup
    uses: ./.github/workflows/image-builder.yml
    with:
      working_dir: users-api
      image: users-api
    secrets:
      docker_hub_user: ${{ secrets.DOCKER_HUB_USER }}
      docker_hub_pass: ${{ secrets.DOCKER_HUB_PASS }}
  test-database:
    needs: build
    runs-on: ubuntu-latest
    # container:
    #   image: lodenn/users-api:latest
    # env:
    #   MONGO_INITDB_DATABASE: users
    #   MONGO_INITDB_ROOT_USERNAME: admin # ðŸ‘ˆ should be github secrets
    #   MONGO_INITDB_ROOT_PASSWORD: secret # ðŸ‘ˆ should be github secrets
    #   MONGO_DB_HOST: mongodb
    #   AUTH_API_ADDRESS: auth:3000
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: users
          MONGO_INITDB_ROOT_USERNAME: admin # ðŸ‘ˆ should be github secrets
          MONGO_INITDB_ROOT_PASSWORD: secret # ðŸ‘ˆ should be github secrets
          SHOULD_LISTEN: false
      auth:
        image: lodenn/auth-api:latest
        env:
          TOKEN_KEY: secrettoken
        ports:
          - 3000:3000
      users:
        image: lodenn/users-api:latest
        env:
          MONGO_INITDB_DATABASE: users
          MONGO_INITDB_ROOT_USERNAME: admin # ðŸ‘ˆ should be github secrets
          MONGO_INITDB_ROOT_PASSWORD: secret # ðŸ‘ˆ should be github secrets
          SHOULD_LISTEN: false
          #   MONGO_DB_HOST: mongodb
          MONGO_DB_HOST: 127.0.0.1:27017
          #   AUTH_API_ADDRESS: auth:3000
          AUTH_API_ADDRESS: 127.0.0.1:3000
        ports:
          - 80:80
    steps:
      - name: Get the code
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          key: dep-node-modules-${{ github.sha }}
          path: ~/.npm
      - name: check working_dir
        run: echo "${{ inputs.working_dir }}"
      - name: install dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        working-directory: ${{ inputs.working_dir }}
        run: npm install
      - name: run users container
        run: node users-api/users-app.js
